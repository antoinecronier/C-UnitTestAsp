//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UnitTests.Tests
{
    using System;
    using System.Collections.Generic;
    using System.Text;
    using Microsoft.VisualStudio.TestTools.WebTesting;
    using Microsoft.VisualStudio.TestTools.WebTesting.Rules;


    public class WebTest1Coded : WebTest
    {

        public WebTest1Coded()
        {
            this.PreAuthenticate = true;
            this.Proxy = "default";
        }

        public override IEnumerator<WebTestRequest> GetRequestEnumerator()
        {
            // Initialiser les règles de validation qui s'appliquent à toutes les requêtes dans le test web
            if ((this.Context.ValidationLevel >= Microsoft.VisualStudio.TestTools.WebTesting.ValidationLevel.Low))
            {
                ValidateResponseUrl validationRule1 = new ValidateResponseUrl();
                this.ValidateResponse += new EventHandler<ValidationEventArgs>(validationRule1.Validate);
            }
            if ((this.Context.ValidationLevel >= Microsoft.VisualStudio.TestTools.WebTesting.ValidationLevel.Low))
            {
                ValidationRuleResponseTimeGoal validationRule2 = new ValidationRuleResponseTimeGoal();
                validationRule2.Tolerance = 0D;
                this.ValidateResponseOnPageComplete += new EventHandler<ValidationEventArgs>(validationRule2.Validate);
            }

            WebTestRequest request1 = new WebTestRequest("http://localhost:23745/");
            request1.ThinkTime = 13;
            yield return request1;
            request1 = null;

            WebTestRequest request2 = new WebTestRequest("http://localhost:23745/Users/");
            request2.ThinkTime = 2;
            yield return request2;
            request2 = null;

            WebTestRequest request3 = new WebTestRequest("http://localhost:23745/Users/Create");
            request3.ThinkTime = 5;
            request3.Headers.Add(new WebTestRequestHeader("Referer", "http://localhost:23745/Users/"));
            ExtractHiddenFields extractionRule1 = new ExtractHiddenFields();
            extractionRule1.Required = true;
            extractionRule1.HtmlDecode = true;
            extractionRule1.ContextParameterName = "1";
            request3.ExtractValues += new EventHandler<ExtractionEventArgs>(extractionRule1.Extract);
            yield return request3;
            request3 = null;

            WebTestRequest request4 = new WebTestRequest("http://localhost:23745/Users/Create");
            request4.Method = "POST";
            request4.ExpectedResponseUrl = "http://localhost:23745/Users";
            request4.Headers.Add(new WebTestRequestHeader("Referer", "http://localhost:23745/Users/Create"));
            FormPostHttpBody request4Body = new FormPostHttpBody();
            request4Body.FormPostParameters.Add("__RequestVerificationToken", this.Context["$HIDDEN1.__RequestVerificationToken"].ToString());
            request4Body.FormPostParameters.Add("Firstname", "pokjpfokze");
            request4Body.FormPostParameters.Add("Lastname", "dpofkg^dk");
            request4.Body = request4Body;
            yield return request4;
            request4 = null;
        }
    }
}
